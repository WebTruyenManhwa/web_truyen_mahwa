worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  # Bật nén gzip để giảm kích thước response
  gzip on;
  gzip_comp_level 5;  # Mức độ nén từ 1-9, 5 là cân bằng giữa CPU và hiệu quả nén
  gzip_min_length 256;  # Chỉ nén các file lớn hơn 256 bytes
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    application/javascript
    application/json
    application/x-javascript
    application/xml
    application/xml+rss
    text/css
    text/javascript
    text/plain
    text/xml;

  # Định nghĩa cache cho GraphQL queries
  proxy_cache_path /var/cache/nginx/graphql levels=1:2 keys_zone=graphql_cache:5m max_size=20m inactive=30m;
  proxy_cache_key "$request_method$request_uri$request_body";

  # Định nghĩa resolver để phân giải tên DNS của các service
  resolver 127.0.0.11 valid=5s;

  # Định nghĩa upstream cho Rails app
  upstream rails_app {
    server backend:3000;  # Sử dụng tên service trong Docker Compose
    keepalive 8;  # Giữ kết nối keepalive với backend để giảm chi phí tạo kết nối mới
  }

  server {
    listen 8080;
    server_name localhost;

    # Thiết lập buffer size nhỏ hơn để tiết kiệm bộ nhớ
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    # Thiết lập timeout ngắn hơn để giải phóng tài nguyên nhanh chóng
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Cấu hình cho GraphQL endpoint
    location /graphql {
      # Xử lý OPTIONS request (CORS preflight)
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      # Cache chỉ cho GET requests (introspection queries)
      proxy_cache graphql_cache;
      proxy_cache_methods GET;
      proxy_cache_valid 200 2m;  # Cache trong 2 phút
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;  # Sử dụng cache cũ khi backend lỗi

      # Không cache POST requests (mutations)
      proxy_cache_bypass $request_method;
      proxy_no_cache $request_method;

      # Rate limiting để bảo vệ API
      limit_req zone=graphql_limit burst=10 nodelay;

      # Sử dụng biến để phân giải DNS động
      set $backend_upstream "http://backend:3000";

      # Proxy đến Rails app
      proxy_pass $backend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;  # Sử dụng HTTP/1.1 để hỗ trợ keepalive
      proxy_set_header Connection "";  # Bỏ header "Connection: close" để giữ keepalive
    }

    # Cấu hình cho /api/graphql endpoint
    location /api/graphql {
      # Xử lý OPTIONS request (CORS preflight)
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      # Proxy đến Rails app
      set $backend_upstream "http://backend:3000";
      proxy_pass $backend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # Cấu hình cho GraphiQL IDE
    location /graphiql {
      set $backend_upstream "http://backend:3000";
      proxy_pass $backend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # Cấu hình cho các API endpoints khác
    location /api {
      set $backend_upstream "http://backend:3000";
      proxy_pass $backend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # Cấu hình cho static files với cache agressive
    location /assets {
      set $backend_upstream "http://backend:3000";
      proxy_pass $backend_upstream;
      proxy_set_header Host $host;
      proxy_cache_valid 200 30d;
      expires 30d;
      add_header Cache-Control "public, max-age=2592000";
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # Cấu hình cho uploads với cache agressive
    location /uploads {
      set $backend_upstream "http://backend:3000";
      proxy_pass $backend_upstream;
      proxy_set_header Host $host;
      proxy_cache_valid 200 30d;
      expires 30d;
      add_header Cache-Control "public, max-age=2592000";
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # Cấu hình cho WebSocket (ActionCable)
    location /cable {
      set $backend_upstream "http://backend:3000";
      proxy_pass $backend_upstream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 86400; # Thời gian timeout dài hơn cho WebSocket
      proxy_buffering off; # Tắt buffering cho WebSocket
    }

    # Cấu hình mặc định cho các routes khác
    location / {
      set $backend_upstream "http://backend:3000";
      proxy_pass $backend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # Health check endpoint
    location /health {
      access_log off;
      return 200 "OK";
    }
  }

  # Rate limiting configuration - giảm xuống để tiết kiệm bộ nhớ
  limit_req_zone $binary_remote_addr zone=graphql_limit:5m rate=5r/s;
}
